create or replace task actor_task
warehouse=COMPUTE_WH
schedule='1 minute' as
merge into actor_target as a1 using (select  raw_file:actor_id:: int as actor_id,
        raw_file:first_name:: varchar as first_name,
        raw_file:last_name:: varchar as last_name, 
        raw_file:last_update:: varchar as last_update,METADATA$ACTION,METADATA$ISUPDATE
        from actor_stream where file_name like '%Actor_%' ) as a on a1.actor_id=a.actor_id
        when matched and (A.METADATA$ACTION='INSERT' and A.METADATA$ISUPDATE='TRUE')
        then update set                         
        a1.actor_id=a.actor_id,a1.first_name=a.first_name,a1.last_name=a.last_name,a1.last_update=a.last_update         when matched and (A.METADATA$ACTION='DELETE')then delete 
        when not matched and (A.METADATA$ACTION='INSERT' and  A.METADATA$ISUPDATE='FALSE')
        then insert (a1.actor_id,a1.first_name,a1.last_name,a1.last_update)
        values (actor_id,first_name,last_name,last_update);
      
      
    create or replace task address_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('address_stream')
as
merge into address_target as ad1 using (select raw_file:address_id:: int as address_id,
raw_file:address:: varchar as address,
raw_file:address2:: varchar as address2,
raw_file:city_id:: varchar as city_id,
raw_file:postal_code:: varchar as postal_code,
raw_file:phone:: varchar as phone,
raw_file:location:: varchar as location,
raw_file:last_update:: varchar as last_update, 
         METADATA$ACTION,METADATA$ISUPDATE
        from ADDRESS_STREAM where file_name like'%Address_%') as ad 
        on ad1.address_id=ad.address_id
        when matched and (AD.METADATA$ACTION='INSERT' and AD.METADATA$ISUPDATE=FALSE)
        then update set                         
ad1.address=ad.address,
ad1.address2=ad.address2,
ad1.city_id=ad.city_id,
ad1.postal_code=ad.postal_code,
ad1.phone=ad.phone,
ad1.location=ad.location,
ad1.last_update=ad.last_update 
when matched and (AD.METADATA$ACTION='DELETE')then delete 
when not matched and (AD.METADATA$ACTION='INSERT' and  AD.METADATA$ISUPDATE='TRUE')
then insert (ad1.address_id,ad1.address,ad1.address2,ad1.city_id,ad1.postal_code,ad1.phone,ad1.location,ad1.last_update)
        values (ad.address_id,ad.address,ad.address2,ad.city_id,ad.postal_code,ad.phone,ad.location,ad.last_update);
       

create or replace task category_task
warehouse=COMPUTE_WH
schedule='1 minute'
when system$stream_has_data('category_stream')
as
merge into category_target as c1 using (select raw_file:category_id:: int as category_id,
raw_file:last_update:: varchar as last_update,
raw_file:name:: varchar as name, 
         METADATA$ACTION,METADATA$ISUPDATE
        from CATEGORY_STREAM where file_name like'%Category%') as c on c1.category_id=c.category_id
        when matched and (C.METADATA$ACTION='INSERT' and C.METADATA$ISUPDATE='TRUE')
        then update set                         
         c1.category_id=c.category_id,c1.last_update=c.last_update,c1.name=c.name    when matched and (C.METADATA$ACTION='DELETE')then delete 
        when not matched and (C.METADATA$ACTION='INSERT' and  C.METADATA$ISUPDATE='FALSE')
        then insert (c1.category_id,c1.last_update,c1.name)
        values (category_id,last_update,name);
      
 create or replace task city_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('city_stream')
as
merge into city_target as ct1 using (select raw_file:city:: varchar as city,
raw_file:city_id:: int as city_id,
raw_file:country_id:: int as country_id,
raw_file:last_update:: varchar as last_update,
         METADATA$ACTION,METADATA$ISUPDATE
        from city_stream where file_name like'%City_%') as ct on ct1.city_id=ct.city_id
        when matched and (CT.METADATA$ACTION='INSERT' and CT.METADATA$ISUPDATE='TRUE')
        then update set                         
         ct1.city=ct.city,ct1.city_id=ct.city_id,ct1.country_id=ct.country_id,ct1.last_update=ct.last_update     when matched and (CT.METADATA$ACTION='DELETE')then delete 
        when not matched and (CT.METADATA$ACTION='INSERT' and  CT.METADATA$ISUPDATE='FALSE')
        then insert (ct1.city,ct1.city_id,ct1.country_id,ct1.last_update)
        values (city,city_id,country_id,last_update);
                   
  create or replace task country_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('country_stream')
as
merge into country_target as co1 using (select 
raw_file:country:: varchar as country,
raw_file:country_id:: int as country_id,
raw_file:last_update:: varchar as last_update,
         METADATA$ACTION,METADATA$ISUPDATE
        from country_stream where file_name like'%Country_%') as co on co1.country_id=co.country_id
        when matched and (CO.METADATA$ACTION='INSERT' and CO.METADATA$ISUPDATE='TRUE')
        then update set                         
         co1.country=co.country,co1.country_id=co.country_id,co1.last_update=co.last_update  when matched and (CO.METADATA$ACTION='DELETE')then delete 
        when not matched and (CO.METADATA$ACTION='INSERT' and  CO.METADATA$ISUPDATE='FALSE')
        then insert (co1.country,co1.country_id,co1.last_update)
        values (country,country_id,last_update);
     
 create or replace task customer_task
warehouse=COMPUTE_WH
schedule='1 minute'
when system$stream_has_data('customer_stream')
as
merge into customer_target as cu1 using (
 select 
raw_file:customer_id:: int as customer_id,
raw_file:store_id:: int as store_id,
raw_file:first_name:: varchar as first_name,
raw_file:last_name:: varchar as last_name,
raw_file:email:: varchar as email,
raw_file:address_id:: int as address_id,
raw_file:active:: int as active,
raw_file:create_date:: varchar as create_date,
raw_file:last_update:: varchar as last_update,
         METADATA$ACTION,METADATA$ISUPDATE
        from customer_stream where file_name like'%Customer_%') as cu on cu1.customer_id=cu.customer_id
        when matched and (CU.METADATA$ACTION='INSERT' and CU.METADATA$ISUPDATE='TRUE')
        then update set                         
         cu1.customer_id=cu.customer_id,cu1.store_id=cu.store_id,cu1.first_name=cu.first_name,cu1.last_name=cu.last_name,cu1.email=cu.email,cu1.address_id=cu.address_id,cu1.active=cu.active,cu1.create_date=cu.create_date,cu1.last_update=cu.last_update  when matched and (CU.METADATA$ACTION='DELETE')then delete 
        when not matched and (CU.METADATA$ACTION='INSERT' and  CU.METADATA$ISUPDATE='FALSE')
        then insert (cu1.customer_id,cu1.store_id,cu1.first_name,cu1.last_name,cu1.email,cu1.address_id,cu1.active,cu1.create_date,cu1.last_update)
        values (customer_id,store_id,first_name,last_name,email,address_id,active,create_date,last_update);
        
create or replace task film_actor_task
warehouse=COMPUTE_WH
schedule='1 minute'
when system$stream_has_data('film_actor_stream')
as
merge into film_actor_target as f1 using (
 select 
raw_file:actor_id:: int as actor_id,
raw_file:film_id:: int as film_id,
raw_file:last_update:: varchar as last_update,  METADATA$ACTION,METADATA$ISUPDATE
        from film_actor_stream where file_name like'%Film_actor_%') as f on f1.actor_id=f.actor_id
        when matched and (F.METADATA$ACTION='INSERT' and F.METADATA$ISUPDATE='TRUE')
        then update set                         
         f1.actor_id=f.actor_id,f1.film_id=f.film_id,f1.last_update=f.last_update when matched and (F.METADATA$ACTION='DELETE')then delete 
        when not matched and (F.METADATA$ACTION='INSERT' and  F.METADATA$ISUPDATE='FALSE')
        then insert (f1.actor_id,f1.film_id,f1.last_update)
        values (actor_id,film_id,last_update);
        
create or replace task film_category_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('film_category_stream')
as
merge into film_category_target as fc1 using (
 select 
raw_file:film_id:: int as film_id,
raw_file:category_id:: int as category_id,
raw_file:last_update:: varchar as last_update,
  METADATA$ACTION,METADATA$ISUPDATE
        from film_category_stream where file_name like'%Film_category_%') as fc on fc1.film_id=fc.film_id
        when matched and (FC.METADATA$ACTION='INSERT' and FC.METADATA$ISUPDATE='TRUE')
        then update set                         
         fc1.film_id=fc.film_id,fc1.category_id=fc.category_id,fc1.last_update=fc.last_update when matched and (FC.METADATA$ACTION='DELETE')then delete 
        when not matched and (FC.METADATA$ACTION='INSERT' and  FC.METADATA$ISUPDATE='FALSE')
        then insert (fc1.film_id,fc1.category_id,fc1.last_update)
        values (film_id,category_id,last_update);
create or replace task film_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('film_stream')
as
merge into film_target as fi1 using (select
 raw_file:film_id:: int as film_id,
raw_file:title:: varchar as title,
raw_file:description:: varchar as description,
raw_file:release_year:: int as release_year,
raw_file:language_id:: int as language_id,
raw_file:original_language_id:: int as original_language_id,
raw_file:rental_duration:: int as rental_duration,
raw_file:rental_rate:: int as rental_rate,
raw_file:length:: int as length,
raw_file:replacement_cost:: int as replacement_cost,
raw_file:rating:: varchar as rating,
raw_file:special_features:: varchar as special_features,
raw_file:last_update:: varchar as last_update,
 METADATA$ACTION,METADATA$ISUPDATE
        from film_stream where file_name like'%Film_%') as fi on fi1.film_id=fi.film_id
        when matched and (FI.METADATA$ACTION='INSERT' and FI.METADATA$ISUPDATE='TRUE')
        then update set                         
         fi1.film_id=fi.film_id,fi1.title=fi.title,fi1.description=fi.description,fi1.release_year=fi.release_year,fi1.language_id=fi.language_id,fi1.original_language_id=fi.original_language_id,fi1.rental_duration=fi.rental_duration,fi1.rental_rate=fi.rental_rate,fi1.length=fi.length,fi1.replacement_cost=fi.replacement_cost,fi1.rating=fi.rating,fi1.special_features=fi.special_features,fi1.last_update=fi.last_update when matched and            (FI.METADATA$ACTION='DELETE')then delete 
        when not matched and (FI.METADATA$ACTION='INSERT' and  FI.METADATA$ISUPDATE='FALSE')
        then insert (fi1.film_id,fi1.title,fi1.description,fi1.release_year,fi1.language_id,fi1.original_language_id,fi1.rental_duration,fi1.rental_rate,fi1.length,fi1.replacement_cost,fi1.rating,fi1.special_features,fi1.last_update)
        values (film_id,title,description,release_year,language_id,original_language_id,rental_duration,rental_rate,length,replacement_cost,rating,special_features,last_update);
   
 create or replace task film_text_task
warehouse=COMPUTE_WH
schedule='1 minute'
when system$stream_has_data('film_text_stream')
as
merge into film_text_target as ft1 using (
 select 
raw_file:film_id:: int as film_id,
raw_file:title:: varchar as title,
raw_file:description:: varchar as description,
  METADATA$ACTION,METADATA$ISUPDATE
        from film_text_stream where file_name like'%Film_text_%') as ft on ft1.film_id=ft.film_id
        when matched and (FT.METADATA$ACTION='INSERT' and FT.METADATA$ISUPDATE='TRUE')
        then update set                         
         ft1.film_id=ft.film_id,ft1.title=ft.title,ft1.description=ft.description when matched and (FT.METADATA$ACTION='DELETE')then delete 
        when not matched and (FT.METADATA$ACTION='INSERT' and  FT.METADATA$ISUPDATE='FALSE')
        then insert (ft1.film_id,ft1.title,ft1.description)
        values (film_id,title,description);
  
create or replace task inventory_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('inventory_stream')
as
merge into inventory_target as i1 using (
 select 
raw_file:inventory_id:: int as inventory_id,
raw_file:film_id:: int as film_id,
raw_file:store_id:: int as store_id,
raw_file:last_update:: varchar as last_update, METADATA$ACTION,METADATA$ISUPDATE
        from inventory_stream where file_name like '%inventory_%') as i on i1.inventory_id=i.inventory_id
        when matched and (I.METADATA$ACTION='INSERT' and I.METADATA$ISUPDATE='TRUE')
        then update set                         
     i1.inventory_id=i.inventory_id,i1.film_id=i.film_id,i1.store_id=i.store_id,i1.last_update=i.last_update when matched and (I.METADATA$ACTION='DELETE')then delete 
        when not matched and (I.METADATA$ACTION='INSERT' and  I.METADATA$ISUPDATE='FALSE')
        then insert (i1.inventory_id,i1.film_id,i1.store_id,i1.last_update)
        values (inventory_id,film_id,store_id,last_update);
       
create or replace task language_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('language_stream')
as
merge into language_target as l1 using (
 select 
raw_file:language_id:: int as language_id,
raw_file:name:: varchar as name,
raw_file:last_update:: varchar as last_update
, METADATA$ACTION,METADATA$ISUPDATE
        from inventory_stream where file_name like'%language_%') as l on l1.language_id=l.language_id
        when matched and (L.METADATA$ACTION='INSERT' and L.METADATA$ISUPDATE='TRUE')
        then update set                         
     l1.language_id=l.language_id,l1.name=l.name,l1.last_update=l.last_update when matched and (L.METADATA$ACTION='DELETE')then delete 
        when not matched and (L.METADATA$ACTION='INSERT' and  L.METADATA$ISUPDATE='FALSE')
        then insert (l1.language_id,l1.name,l1.last_update)
        values (language_id,name,last_update);
            
create or replace task payment_task
warehouse=COMPUTE_WH
schedule='1 minute'
when system$stream_has_data('payment_stream')
as
merge into payment_target as p1 using (
 select 
raw_file:payment_id:: int as payment_id,
raw_file:customer_id:: int as customer_id,
raw_file:staff_id:: int as staff_id,
raw_file:rental_id:: int as rental_id,
raw_file:amount:: int as amount, METADATA$ACTION,METADATA$ISUPDATE
        from payment_stream where file_name like'%payment_%') as p on p1.payment_id=p.payment_id
        when matched and (P.METADATA$ACTION='INSERT' and P.METADATA$ISUPDATE='TRUE')
        then update set                         
     p1.payment_id=p.payment_id,p1.customer_id=p.customer_id,p1.staff_id=p.staff_id,p1.rental_id=p.rental_id when matched and (P.METADATA$ACTION='DELETE')then delete 
        when not matched and (P.METADATA$ACTION='INSERT' and  P.METADATA$ISUPDATE='FALSE')
        then insert (p1.payment_id,p1.customer_id,p1.staff_id,p1.rental_id)
        values (payment_id,customer_id,staff_id,rental_id);
        
 create or replace task rental_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('rental_stream')
as
merge into rental_target as r1 using (
 select 
raw_file:rental_id:: int as rental_id,
raw_file:rental_date:: varchar as rental_date,
raw_file:inventory_id:: int as inventory_id,
raw_file:customer_id:: int as customer_id,
raw_file:return_date:: varchar as return_date,
raw_file:staff_id:: int as staff_id,
raw_file:last_update:: varchar as last_update,METADATA$ACTION,METADATA$ISUPDATE
 from rental_stream where file_name like'%rental_%') as r on r1.rental_id=r.rental_id
        when matched and (R.METADATA$ACTION='INSERT' and R.METADATA$ISUPDATE='TRUE')
        then update set                         
     r1.rental_id=r.rental_id,r1.rental_date=r.rental_date,r1.inventory_id=r.inventory_id,r1.customer_id=r.customer_id,r1.return_date=r.return_date,r1.staff_id=r.staff_id,r1.last_update=r.last_update when matched and (R.METADATA$ACTION='DELETE')then delete 
        when not matched and (R.METADATA$ACTION='INSERT' and  R.METADATA$ISUPDATE='FALSE')
        then insert (r1.rental_id,r1.rental_date,r1.inventory_id,r1.customer_id,r1.return_date,r1.staff_id,r1.last_update)
        values (rental_id,rental_date,inventory_id,customer_id,return_date,staff_id,last_update);
            
  
 create or replace task staff_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('staff_stream')
as
merge into staff_target as s1 using (
 select 
raw_file:staff_id:: int as staff_id,
raw_file:first_name:: varchar as first_name,
raw_file:last_name:: varchar as last_name,
raw_file:address_id:: int as address_id,
raw_file:email:: varchar as email,
raw_file:store_id:: int as store_id,
raw_file:active:: int as active,
raw_file:username:: varchar as username,
raw_file:password:: varchar as password,
raw_file:last_update:: varchar as last_update,METADATA$ACTION,METADATA$ISUPDATE
from staff_stream where file_name like'%staff_%') as s on s1.staff_id=s.staff_id
        when matched and (S.METADATA$ACTION='INSERT' and S.METADATA$ISUPDATE='TRUE')
        then update set                         
     s1.staff_id=s.staff_id,s1.first_name=s.first_name,s1.last_name=s.last_name,s1.address_id=s.address_id,s1.email=s.email,s1.store_id=s.store_id,s1.active=s.active,s1.username=s.username,s1.password=s.password,s1.last_update=s.last_update when matched and (S.METADATA$ACTION='DELETE')then delete 
        when not matched and (S.METADATA$ACTION='INSERT' and  S.METADATA$ISUPDATE='FALSE')
        then insert (s1.staff_id,s1.first_name,s1.last_name,s1.address_id,s1.email,s1.store_id,s1.active,s1.username,s1.password,s1.last_update)
        values (staff_id,first_name,last_name,address_id,email,store_id,active,username,password,last_update);

create or replace task store_task
warehouse=COMPUTE_WH
schedule='1 minute' 
when system$stream_has_data('store_stream')
as
merge into store_target as st1 using (
 select 
raw_file:store_id:: int as store_id,
raw_file:manager_staff_id:: int as manager_staff_id,
raw_file:address_id:: int as address_id,
raw_file:last_update:: varchar as last_update,
METADATA$ACTION,METADATA$ISUPDATE
        from store_stream where file_name like'%store_%') as st on st1.store_id=st.store_id
        when matched and (ST.METADATA$ACTION='INSERT' and ST.METADATA$ISUPDATE='TRUE')
        then update set                         
     st1.store_id=st.store_id,st1.manager_staff_id=st.manager_staff_id,st1.address_id=st.address_id,st1.last_update=st.last_update when matched and (ST.METADATA$ACTION='DELETE')then delete 
        when not matched and (ST.METADATA$ACTION='INSERT' and  ST.METADATA$ISUPDATE='FALSE')
        then insert (st1.store_id,st1.manager_staff_id,st1.address_id,st1.last_update)
        values (store_id,manager_staff_id,address_id,last_update);
